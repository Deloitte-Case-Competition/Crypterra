/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.deloitte.net

// ******************** PARTICIPANTS ***********************

participant Person identified by personID{
  o String personID
  o String firstName
  o String lastName
}

participant Employee extends Person{
  o String employeeID
  o String position
  o Double salary
  o Company company
}

participant Company identified by companyName {
  o String companyName
  o String companyId
  o Employee[] employees
  o Double netWorth
  o String[] location
  //o Company[] subsidiaries

}

// ******************** ACCOUNTS ***********************

asset btcAccount identified by btcAccountID {
  o String btcAccountID
  --> Company owner
  o Double balanceBTC
}

asset ethAccount identified by ethAccountID{
  o String ethAccountID
  --> Company owner
  o Double balanceETH
}

asset usdAccount identified by usdAccountID{
  o String usdAccountID
  --> Company owner
  o Double balanceUSD
}

asset cadAccount identified by cadAccountID{
  o String cadAccountID
  --> Company owner
  o Double balanceCAD
}

asset gbpAccount identified by gbpAccountID{
  o String gbpAccountID
  --> Company owner 
  o Double balanceGBP
}

// ********************TRANSACTIONS ***********************

transaction btcTransaction {
  --> btcAccount from
  --> btcAccount to
  o Double amountBTC
}

transaction ethTransaction {
  --> ethAccount from
  --> ethAccount to
  o Double amountETH
}

transaction usdTransaction {
  --> usdAccount from
  --> usdAccount to
  o Double amountUSD
}

transaction cadTransaction {
  --> cadAccount from
  --> cadAccount to
  o Double amountCAD
}

transaction gbpTransaction {
  --> gbpAccount from
  --> gbpAccount to
  o Double amountGBP
}
